{"version":3,"sources":["components/Header.js","components/Button.js","components/Form.js","components/Input.js","components/MainContainer.js","DataContext.js","components/Step1.js","components/Step2.js","components/FileInput.js","components/Step3.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","fontFamily","margin","spacing","textAlign","fontSize","color","textShadow","Header","styles","Typography","className","component","variant","PrimaryButton","children","props","Button","type","fullWidth","width","marginTop","Form","noValidate","Input","forwardRef","ref","TextField","inputRef","display","flexDirection","alignItems","MainContainer","Container","container","maxWidth","DataContext","createContext","DataProvider","useState","data","setData","Provider","value","setValues","values","prevData","useData","useContext","schema","yup","shape","firstName","matches","required","lastName","Step1","history","useHistory","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","onSubmit","push","id","label","name","error","helperText","message","email","Step2","hasPhone","phoneNumber","watch","FormControlLabel","control","Checkbox","defaultChecked","defaultValue","onChange","event","target","parsePhoneNumberFromString","formatInternational","normalizePhoneNumber","backgroundColor","cursor","padding","icon","FileInput","render","onBlur","onDrop","getRootProps","getInputProps","Paper","CloudUpload","List","map","f","index","ListItem","key","ListItemIcon","InsertDriveFile","ListItemText","primary","secondary","size","Step3","files","marginBottom","table","Result","successFrom","setSuccessFrom","entries","Object","filter","entry","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","toString","onClick","Swal","fire","to","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.884b634c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: \"Permanent Marker\",\r\n    margin: theme.spacing(3, 0, 2),\r\n    textAlign: \"center\",\r\n    fontSize: \"40px\",\r\n    color: \"deeppink\",\r\n    textShadow: \"1px 1px darkmagenta\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Typography className={styles.root} component=\"h1\" variant=\"h5\">\r\n      The Ultimate Form\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst PrimaryButton = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      className={styles.root}\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Form = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <form className={styles.root} noValidate {...props}>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      inputRef={ref}\r\n      fullWidth\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst MainContainer = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      className={styles.root}\r\n      container=\"main\"\r\n      maxWidth=\"xs\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React, { createContext, useContext , useState } from \"react\";\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  const setValues = (values) => {\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      ...values,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={{ data, setValues }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\n\r\nimport PrimaryButton from \"./Button\";\r\nimport Form from \"./Form\";\r\nimport Input from \"./Input\";\r\nimport MainContainer from \"./MainContainer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useData } from \"../DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .matches(/^([^0-9]*)$/, \"First name should not contain numbers\")\r\n    .required(\"First name is a required field\"),\r\n  lastName: yup\r\n    .string()\r\n    .matches(/^([^0 -9]*)$/, \"Last name should not contain numbers\")\r\n    .required(\"Last name is a required field\"),\r\n});\r\n\r\nconst Step1 = () => {\r\n  const history = useHistory();\r\n  const { data, setValues } = useData();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: { firstName: data.firstName, lastName: data.lastName },\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    history.push(\"/step2\");\r\n    setValues(data);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component=\"h2\" variant=\"h5\">\r\n        Step 1\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          ref={register}\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          label=\"First Name\"\r\n          name=\"firstName\"\r\n          error={!!errors.firstName}\r\n          helperText={errors?.firstName?.message}\r\n        />\r\n        <Input\r\n          ref={register}\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          error={!!errors.lastName}\r\n          helperText={errors?.lastName?.message}\r\n        />\r\n        <PrimaryButton>Next</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Step1;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\n\r\nimport PrimaryButton from \"./Button\";\r\nimport Form from \"./Form\";\r\nimport Input from \"./Input\";\r\nimport MainContainer from \"./MainContainer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\r\n\r\nimport { useData } from \"../DataContext\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().email(\"Email should have correct format\"),\r\n});\r\n\r\nconst normalizePhoneNumber = (value) => {\r\n  const phoneNumber = parsePhoneNumberFromString(value);\r\n  if (!phoneNumber) {\r\n    return value;\r\n  }\r\n\r\n  return phoneNumber.formatInternational();\r\n};\r\n\r\nconst Step2 = () => {\r\n  const history = useHistory();\r\n\r\n  const { data, setValues } = useData();\r\n\r\n  const { register, handleSubmit, errors, watch } = useForm({\r\n    defaultValues: {\r\n      email: data.email,\r\n      hasPhone: data.hasPhone,\r\n      phoneNumber: data.phoneNumber,\r\n    },\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const hasPhone = watch(\"hasPhone\");\r\n\r\n  const onSubmit = (data) => {\r\n    history.push(\"/step3\");\r\n    setValues(data);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component=\"h2\" variant=\"h5\">\r\n        Step 2\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          ref={register}\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"Email Name\"\r\n          name=\"email\"\r\n          required\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message}\r\n        />\r\n\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              defaultChecked={data.hasPhone}\r\n              defaultValue={data.hasPhone}\r\n              name=\"hasPhone\"\r\n              inputRef={register}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Do you have a phone?\"\r\n        />\r\n\r\n        {hasPhone && (\r\n          <Input\r\n            ref={register}\r\n            id=\"phoneNumber\"\r\n            type=\"tel\"\r\n            label=\"Phone Number\"\r\n            name=\"phoneNumber\"\r\n            onChange={(event) => {\r\n              event.target.value = normalizePhoneNumber(event.target.value);\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <PrimaryButton>Next</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Step2;\r\n","import { CloudUpload, InsertDriveFile } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nimport {\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#eee\",\r\n    textAlign: \"center\",\r\n    cursor: \"pointer\",\r\n    color: \"#333\",\r\n    padding: \"10px\",\r\n    marginTop: \"20px\",\r\n  },\r\n  icon: {\r\n    marginTop: \"16px\",\r\n    color: \"#888\",\r\n    fontSize: \"42px\",\r\n  },\r\n}));\r\n\r\nconst FileInput = ({ control, name }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={[]}\r\n      render={({ onChange, onBlur, value }) => (\r\n        <>\r\n          <Dropzone onDrop={onChange}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <Paper className={styles.root} variant=\"outlined\" {...getRootProps()}>\r\n                <CloudUpload className={styles.icon} />\r\n                <input {...getInputProps()} name={name} onBlur={onBlur} />\r\n                <p>Drag and drop files here , or click to select files</p>\r\n              </Paper>\r\n            )}\r\n          </Dropzone>\r\n          <List>\r\n            {value.map((f, index) => (\r\n              <ListItem key={index}>\r\n                <ListItemIcon>\r\n                  <InsertDriveFile />\r\n                </ListItemIcon>\r\n                <ListItemText primary={f.name} secondary={f.size} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import React from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport FileInput from \"./FileInput\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Form from \"./Form\";\r\nimport MainContainer from \"./MainContainer\";\r\nimport PrimaryButton from \"./Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useData } from \"../DataContext\";\r\n\r\nconst Step3 = () => {\r\n  const history = useHistory();\r\n\r\n  const { data, setValues } = useData();\r\n\r\n  const { control, handleSubmit } = useForm({\r\n    defaultValues: { files: data.files },\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    history.push(\"/result\");\r\n    setValues(data);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component=\"h2\" variant=\"h5\">\r\n        Step 3\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FileInput name=\"files\" control={control} />\r\n        <PrimaryButton>Next</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Step3;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainContainer from \"./MainContainer\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { InsertDriveFile } from \"@material-ui/icons\";\r\n\r\nimport { useData } from \"../DataContext\";\r\n\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport PrimaryButton from \"./Button\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Confetti from \"react-confetti\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: \"30px\",\r\n  },\r\n  table: {\r\n    marginBottom: \"30px\",\r\n  },\r\n});\r\n\r\nconst Result = () => {\r\n  const [successFrom, setSuccessFrom] = useState(false);\r\n\r\n  const styles = useStyles();\r\n\r\n  const { data } = useData();\r\n\r\n  const entries = Object.entries(data).filter((entry) => entry[0] !== \"files\");\r\n\r\n  const { files } = data;\r\n\r\n  const onSubmit = () => {\r\n    Swal.fire(\"Greet job!\", \"Data sent!\", \"success\");\r\n    setSuccessFrom(true);\r\n  };\r\n\r\n  if (successFrom) {\r\n    return <Confetti />;\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component=\"h2\" variant=\"h5\">\r\n        Step 3\r\n      </Typography>\r\n      <TableContainer className={styles.root}>\r\n        <Table className={styles.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Field</TableCell>\r\n              <TableCell align=\"right\">Values</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {entries.map((entry) => (\r\n              <TableRow key={entry[0]}>\r\n                <TableCell>{entry[0]}</TableCell>\r\n                <TableCell align=\"right\">{entry[1].toString()}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {files && (\r\n        <>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Files\r\n          </Typography>\r\n          <List>\r\n            {files.map((f, index) => (\r\n              <ListItem key={index}>\r\n                <ListItemIcon>\r\n                  <InsertDriveFile />\r\n                </ListItemIcon>\r\n                <ListItemText primary={f.name} secondary={f.size} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </>\r\n      )}\r\n      <PrimaryButton onClick={onSubmit}>Submit</PrimaryButton>\r\n      <Link to=\"/\">Start over</Link>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\n\nimport Step1 from \"./components/Step1\";\nimport Step2 from \"./components/Step2\";\nimport Step3 from \"./components/Step3\";\nimport Result from \"./components/Result\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Step1} />\n          <Route path=\"/step2\" component={Step2} />\n          <Route path=\"/step3\" component={Step3} />\n          <Route path=\"/result\" component={Result} />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataProvider } from \"./DataContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}